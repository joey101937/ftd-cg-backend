generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      =  env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  username String @unique
  password String
  meta Json @default("{}")
  offensiveGames Game[] @relation("attackingPlayer")
  defensiveGames Game[] @relation("defendingPlayer")
  decks Deck[]
  cards Card[]
}

model Game {
  id String @id @default(uuid())
  status String @default("active")
  meta Json @default("{}")

  turnNumber Decimal @default(1) // 1 = attackers t1, 1.5 = defenders t1. 2 = attackers t2, 2.5 = defenders t2
  activeBattle Json?
  
  attackingPlayerId String
  defendingPlayerId String
  
  winningPlayerId String?
  losingPlayerId String?
  
  
  attackingPlayerUsername String
  defendingPlayerUsername String

  attackingPlayerDeckInstance Json @default("[]")
  defendingPlayerDeckInstance Json @default("[]")

  attackingPlayerHand Json @default("[]")
  defendingPlayerHand Json @default("[]")

  attackingPlayerCp Int @default(0)
  defendingPlayerCp Int @default(0)
  attackingPlayerMaterials Int @default(0)
  defendingPlayerMaterials Int @default(0)

  attackingPlayerAvailableHeroPowers Json @default("[]")
  defendingPlayerAvailableHeroPowers Json @default("[]")

  isAttackingPlayersTurn Boolean @default(true)

  zones Json

  attackingPlayer User @relation("attackingPlayer", fields: [attackingPlayerId], references: [id])
  defendingPlayer User @relation("defendingPlayer", fields: [defendingPlayerId], references: [id])
}

model Deck {
  id String @id @default(uuid())
  name String
  playerId String
  meta Json @default("{}")
  // contains cards field that maps card id to integer quantity

  player User @relation(fields: [playerId], references: [id])
}

model Card {
  id String @id @default(uuid())
  name String
  isBuiltIn Boolean @default(false) // true = base game card, false = custom card
  playerId String?
  imageUrl String?
  blueprintId String?
  blueprintCost Int
  materialCost Int
  cpCost Int @default(0)
  type String // vehicle or ability
  vehicleType String? // ship, tank, sub, plane
  cardText String
  meta Json @default("{}")
  keywords Json @default("[]") // keywords: ['blocker', 'scrappy', airScreen, 'subScreen', 'temporary', 'inoffensive']
  faction String @default("NEUTRAL")
  // meta also contain the anti surface/air/sub capabilities for ui display
  player User? @relation(fields: [playerId], references: [id])
}

model blueprint {
  id String @id @default(uuid())
  meta Json @default("{}")
  blueprintCost Int @default(0)
  name String?
  blueprintRaw Json?
}
